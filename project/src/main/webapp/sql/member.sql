CREATE TABLE MEMBER( -- 테이블 회원
   MEMBER_ID VARCHAR(255) PRIMARY KEY, --PK MID
   MEMBER_PASSWORD VARCHAR(20) NOT NULL, -- 비밀번호
   MEMBER_NICKNAME VARCHAR(20) NOT NULL, -- 닉네임
   MEMBER_NAME VARCHAR(20) NOT NULL,	-- 이름
   MEMBER_PROFILE VARCHAR(100) DEFAULT 'default.jpg',-- 프로필 사진 (파일명만 저장)
   MEMBER_REGISTRATION_DATE DATE DEFAULT SYSDATE, -- 가입 날짜
   MEMBER_PHONE VARCHAR(20), -- 전화 번호
   MEMBER_ADDRESS VARCHAR(100), -- 주소
   MEMBER_ROLE VARCHAR(10) DEFAULT 'USER' -- 역할 == USER
);



-- DEFAULT 변경
ALTER TABLE MEMBER
MODIFY MEMBER_PROFILE VARCHAR(100) DEFAULT 'default.jpg';
-- 컬럼 타입 변경
ALTER TABLE MEMBER
MODIFY MEMBER_ID VARCHAR(255);
-- 컬럼 확인
SELECT COLUMN_NAME, DATA_TYPE, DATA_LENGTH, DATA_DEFAULT
FROM USER_TAB_COLUMNS
WHERE TABLE_NAME = 'MEMBER';



-- 테이블 지우기
DROP TABLE MEMBER CASCADE CONSTRAINT;
-- 전체 출력
SELECT * FROM MEMBER;

-- 샘플데이터
INSERT INTO MEMBER (MEMBER_ID,MEMBER_PASSWORD,MEMBER_NICKNAME,MEMBER_NAME,MEMBER_REGISTRATION_DATE,MEMBER_PHONE,MEMBER_ADDRESS)
VALUES('123@naver.com','123','솜','신다솜',SYSDATE,'010-1234-5678','123_서울특별시 동작구_ㅎㅎ_11');
INSERT INTO MEMBER (MEMBER_ID,MEMBER_PASSWORD,MEMBER_NICKNAME,MEMBER_NAME,MEMBER_REGISTRATION_DATE,MEMBER_PHONE,MEMBER_ADDRESS)
VALUES('wlsrja3852@naver.com','1234','콩이','신콩이',SYSDATE,'010-2015-1010','666_서울특별시 관악구_ㄷㄷㄷ_22');
INSERT INTO MEMBER (MEMBER_ID,MEMBER_PASSWORD,MEMBER_NICKNAME,MEMBER_NAME,MEMBER_REGISTRATION_DATE,MEMBER_PHONE,MEMBER_ADDRESS)
VALUES('MOOGUN@naver.com','1234','무건','김무건',SYSDATE,'010-1234-5679','555_서울특별시 성동구_ㄴㄴㄴ_44');
INSERT INTO MEMBER (MEMBER_ID,MEMBER_PASSWORD,MEMBER_NICKNAME,MEMBER_NAME,MEMBER_REGISTRATION_DATE,MEMBER_PHONE,MEMBER_ADDRESS)
VALUES('MOORANG3852@naver.com','1234','무랑','김무랑',SYSDATE,'010-2015-1011','222_서울특별시 은평구_ddㄹㄹㅇ_55');
INSERT INTO MEMBER (MEMBER_ID,MEMBER_PASSWORD,MEMBER_NICKNAME,MEMBER_NAME,MEMBER_REGISTRATION_DATE,MEMBER_PHONE,MEMBER_ADDRESS)
VALUES('MOOMOO@naver.com','1234','무무','김무무',SYSDATE,'010-2025-0921','333_서울특별시 구구구_ddd_11ㅇㄹㅇ');

select MEMBER_ID FROM MEMBER;
 -- 회원 추가
INSERT INTO MEMBER(MEMBER_ID, MEMBER_PASSWORD, MEMBER_NICKNAME, MEMBER_NAME, MEMBER_PHONE, MEMBER_ADDRESS, MEMBER_ROLE) VALUES (?, ?, ?, ?, ?, ?, ?);

-- 회원 삭제
DELETE FROM MEMBER WHERE MEMBER_ID=?;

-- 회원 프로필 변경
UPDATE MEMBER SET MEMBER_PROFILE = ? WHERE MEMBER_ID = ?;

--회원 비밀번호 변경
UPDATE MEMBER SET MEMBER_PASSWORD = ? WHERE MEMBER_ID = ?;

/* 기능 변경으로 인해 주석처리 24.09.06
-- 회원 닉네임 변경
UPDATE MEMBER SET MEMBER_NICKNAME = ? WHERE MEMBER_ID = ?;
-- 회원 이름 변경
UPDATE MEMBER SET MEMBER_NAME = ? WHERE MEMBER_ID = ?;
*/

-- 회원 이름 + 닉네임 변경
UPDATE MEMBER SET MEMBER_NAME = COALESCE(?,MEMBER_NAME), MEMBER_NICKNAME = COALESCE(?,MEMBER_NICKNAME) WHERE MEMBER_ID = ?;


SELECT * 
FROM MEMBER 
WHERE JOINDATE >= CURRENT_DATE - INTERVAL '7' DAY;
--현재 날짜에서 7일을 뺀 날짜를 기준으로 가입일을 필터링


-- 최근 가입한 회원 전체 출력 (7일 이내 가입한 회원)
SELECT MEMBER_ID,MEMBER_PASSWORD,MEMBER_NICKNAME,MEMBER_NAME,MEMBER_PROFILE,MEMBER_REGISTRATION_DATE,MEMBER_PHONE,MEMBER_ADDRESS,MEMBER_ROLE FROM MEMBER WHERE MEMBER_REGISTRATION_DATE >= CURRENT_DATE - INTERVAL '7' DAY;


-- 이메일(아이디) 중복검사
SELECT MEMBER_ID,MEMBER_PASSWORD,MEMBER_NICKNAME,MEMBER_NAME,MEMBER_PROFILE,MEMBER_REGISTRATION_DATE FROM MEMBER WHERE MEMBER_ID = ?;


-- 닉네임 중복검사
SELECT MEMBER_ID,MEMBER_PASSWORD,MEMBER_NICKNAME,MEMBER_NAME,MEMBER_PROFILE,MEMBER_REGISTRATION_DATE FROM MEMBER WHERE MEMBER_NICKNAME = ?;


-- 로그인 확인 
SELECT MEMBER_ID,MEMBER_PASSWORD,MEMBER_NICKNAME,MEMBER_NAME,MEMBER_PROFILE,MEMBER_REGISTRATION_DATE FROM MEMBER WHERE MEMBER_ID = 'tlsektha3852@naver.com' AND MEMBER_PASSWORD = '1234';

-- 회원 마이페이지
SELECT MEMBER_ID,MEMBER_NAME,MEMBER_NICKNAME,MEMBER_PHONE,MEMBER_ADDRESS,MEMBER_PROFILE FROM MEMBER WHERE MEMBER_ID = ?;

-- 회원 레벨 반환
SELECT M.MEMBER_ID,ML.MEMBER_LEVEL FROM MEMBER M
JOIN (SELECT B.BOARD_WRITER_ID,COUNT(B.BOARD_WRITER_ID) AS MEMBER_LEVEL FROM BOARD B GROUP BY B.BOARD_WRITER_ID)ML ON M.MEMBER_ID=ML.BOARD_WRITER_ID
WHERE MEMBER_ID=?;

-- 회원 비밀번호 반환 
SELECT MEMBER_ID, MEMBER_PASSWORD FROM MEMBER WHERE MEMBER_ID = ?;

SELECT MEMBER_ID FROM (SELECT MEMBER_ID FROM MEMBER ORDER BY DBMS_RANDOM.VALUE)WHERE ROWNUM = 2;


/*
CREATE OR REPLACE TRIGGER trg_update_member_level
BEFORE UPDATE OF MXP ON MEMBER
FOR EACH ROW
BEGIN
    -- 만약 새로 업데이트된 MXP 값이 5 이상일 경우
    IF :NEW.MXP >= 5 THEN
        -- MLEVEL을 1 증가시키고 MXP를 0으로 리셋합니다
        UPDATE MEMBER
        SET MLEVEL = MLEVEL + 1, 
            MXP = MXP - 5
        WHERE MID = :NEW.MID;
    END IF;
END;
/
 */

/*
-- 트리거 생성: 게시글이 BOARD 테이블에 삽입될 때 MLEVEL을 업데이트하는 트리거
CREATE OR REPLACE TRIGGER trg_update_member_level
AFTER INSERT ON BOARD
-- BOARD 테이블에 새로운 행이 삽입된 후에 트리거가 실행됩니다
FOR EACH ROW
DECLARE
    v_post_count NUMBER;  -- 게시글 수를 저장할 변수
BEGIN
    -- 현재 삽입된 게시글의 MID 값을 기준으로 BOARD 테이블에서 특정 회원의 게시글 수를 계산합니다
    SELECT COUNT(*) INTO v_post_count
    FROM BOARD
    WHERE MID = :NEW.MID;

    -- 게시글 수가 5의 배수일 때 MLEVEL을 1 증가시킵니다
    IF v_post_count MOD 5 = 0 THEN
        -- MEMBER 테이블에서 해당 회원의 MLEVEL을 1 증가시킵니다
        UPDATE MEMBER
        SET MLEVEL = MLEVEL + 1
        WHERE MID = :NEW.MID;
    END IF;
END;
/
*/

-- 레벨 업데이트를 위한 트리거 예시
/*
CREATE OR REPLACE TRIGGER trg_update_level
AFTER UPDATE ON MEMBER -- MEMBER 테이블에서 업데이트가 완료된 후 트리거가 실행
FOR EACH ROW -- 각 업데이트된 행마다 트리거가 실행
BEGIN
    -- 레벨을 계산하는 로직을 호출 (여기서는 가상의 로직을 사용)
    -- 예를 들어, 레벨은 경험치나 다른 기준으로 계산할 수 있습니다
    :NEW.level := calculate_new_level(:NEW.mid);
    -- NEW는 업데이트된 행의 새로운 값을 나타냄
    -- calculate_new_level이라는 함수를 호출하여 새로운 레벨을 계산하고 level 칼럼에 설정
END;
/
-- 레벨을 계산하는 함수 예시
CREATE OR REPLACE FUNCTION calculate_new_level(mid VARCHAR2)
RETURN NUMBER
IS
    new_level NUMBER;
BEGIN
    -- 여기서 실제 레벨 계산 로직을 구현합니다.
    -- 예를 들어, 특정 기준에 따라 레벨을 계산할 수 있습니다.
    
    -- 예를 들어, 경험치나 기타 조건을 기준으로 레벨을 설정할 수 있습니다.
    -- 여기는 예시로서, 임의의 값을 반환합니다.
    new_level := 1; -- 계산된 레벨을 설정합니다.
    
    RETURN new_level;
END;
/
*/