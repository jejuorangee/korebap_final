CREATE TABLE PRODUCT( -- 상품
   PRODUCT_NUM INT PRIMARY KEY, -- 상품 번호 PK 
   PRODUCT_NAME VARCHAR(4000) NOT NULL, -- 상품 명
   PRODUCT_PRICE INT NOT NULL, -- 상품 가격
   PRODUCT_DETAILS VARCHAR(4000),-- 상품 설명
   PRODUCT_CNT INT NOT NULL, -- 재고
   PRODUCT_ADDRESS VARCHAR(4000) NOT NULL, -- 상품의 주소
   PRODUCT_LOCATION VARCHAR(20) NOT NULL CHECK(PRODUCT_LOCATION IN('바다','민물')), -- 상품 장소 (바다, 민물) 위치
   -- 바다와 민물만 들어올 수 있도록 CHECK 제약조건 추가
   PRODUCT_CATEGORY VARCHAR(20) NOT NULL CHECK(PRODUCT_CATEGORY IN('낚시배','낚시터','낚시카페','수상'))-- 상품 유형(낚시배, 낚시터)
   -- 낚시배와 낚시터만 들어올 수 있도록 CHECK 제약조건 추가
);
   --PRODUCT_SELLER_ID VARCHAR(50) NOT NULL, -- 판매자 정보 FK // 추후 컬럼 추가
   
-- ** 상품 전체 출력 VIEW
-- SELECTALL의 기능들의 쿼리가 기능마다 동일하게 반복되고, JOIN 또한 반복되어 복잡해지므로 쿼리 재사용 위해 가상의 테이블인 VIEW 생성
-- 쿼리를 단순화시켜 쿼리 최적화를 돕고, 가독성과 재사용성을 높이기 위해 사용
CREATE VIEW PRODUCT_INFO_VIEW AS
SELECT P.PRODUCT_NUM, P.PRODUCT_NAME, P.PRODUCT_PRICE,P.PRODUCT_ADDRESS, P.PRODUCT_LOCATION, P.PRODUCT_CATEGORY,COALESCE(RV.RATING,0) AS RATING,
COALESCE(PM.PAYMENT_COUNT,0) AS PAYMENT_COUNT, COALESCE(W.WISHLIST_PRODUCT_NUM,0) AS WISHLIST_COUNT, 
PI.FILE_NAME, PI.FILE_EXTENSION, PI.FILE_DIR
FROM PRODUCT P 
LEFT JOIN(SELECT R.REVIEW_PRODUCT_NUM, ROUND(AVG(R.REVIEW_STAR),1) AS RATING FROM REVIEW R GROUP BY R.REVIEW_PRODUCT_NUM)RV ON P.PRODUCT_NUM = RV.REVIEW_PRODUCT_NUM
LEFT JOIN(SELECT PA.PAYMENT_PRODUCT_NUM, COUNT(PA.PAYMENT_PRODUCT_NUM) AS PAYMENT_COUNT  FROM PAYMENT PA GROUP BY PA.PAYMENT_PRODUCT_NUM) PM ON P.PRODUCT_NUM = PM.PAYMENT_PRODUCT_NUM
LEFT JOIN (SELECT WI.WISHLIST_PRODUCT_NUM, COUNT(WI.WISHLIST_PRODUCT_NUM) AS WISHLIST_COUNT FROM WISHLIST WI GROUP BY WI.WISHLIST_PRODUCT_NUM)W ON P.PRODUCT_NUM=W.WISHLIST_PRODUCT_NUM
LEFT JOIN (SELECT I.FILE_NAME, I.FILE_EXTENSION, I.FILE_DIR, I.PRODUCT_ITEM_NUM FROM (SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR,PRODUCT_ITEM_NUM, ROW_NUMBER() OVER(PARTITION BY PRODUCT_ITEM_NUM ORDER BY FILE_NUM)AS RN FROM IMAGEFILE)I WHERE RN = 2)PI
ON P.PRODUCT_NUM = PI.PRODUCT_ITEM_NUM;



SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, FILE_DIR
FROM (
    SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT,FILE_DIR,
           ROW_NUMBER() OVER (
           		ORDER BY 
           		CASE
           		 	when ? IS NOT NULL and ? = 'newest' THEN PRODUCT_NUM
                    WHEN ? IS NOT NULL and ? = 'rating' THEN COALESCE(RATING, -1)
                    WHEN ? IS NOT NULL and ? = 'wish' THEN COALESCE(WISHLIST_COUNT, -1)
                    WHEN ? IS NOT NULL and ? = 'payment' THEN COALESCE(PAYMENT_COUNT, -1)
                    ELSE PRODUCT_NUM
                   END DESC) AS ROW_NUM
    FROM PRODUCT_INFO_VIEW
    WHERE PRODUCT_NAME LIKE CONCAT('%',COALESCE(?, ''), '%')
) AS subquery
WHERE ROW_NUM BETWEEN (COALESCE(?, 1) - 1) * 9 + 1 AND COALESCE(?, 1) * 9;


SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, FILE_DIR
FROM (
    SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT,FILE_DIR,
           ROW_NUMBER() OVER (
           		ORDER BY 
           		CASE
           		 	WHEN ?  = 'newest' THEN PRODUCT_NUM
                    WHEN ? = 'rating' THEN COALESCE(RATING, -1)
                    WHEN ? = 'wish' THEN COALESCE(WISHLIST_COUNT, -1)
                    WHEN ? = 'payment' THEN COALESCE(PAYMENT_COUNT, -1)
                    ELSE PRODUCT_NUM
                   END DESC) AS ROW_NUM
    FROM PRODUCT_INFO_VIEW
    WHERE PRODUCT_NAME LIKE CONCAT('%',COALESCE(?, ''), '%')
    AND (PRODUCT_LOCATION = COALESCE(?, PRODUCT_LOCATION)) AND (PRODUCT_CATEGORY = COALESCE(?, PRODUCT_CATEGORY))
) AS subquery 
WHERE ROW_NUM BETWEEN (COALESCE(?, 1) - 1) * 9 + 1 AND COALESCE(?, 1) * 9;




















CREATE VIEW PRODUCT_INFO_VIEW AS
SELECT P.PRODUCT_NUM, P.PRODUCT_NAME, P.PRODUCT_PRICE,P.PRODUCT_ADDRESS, P.PRODUCT_LOCATION, P.PRODUCT_CATEGORY,COALESCE(RV.RATING,0) AS RATING,
COALESCE(PM.PAYMENT_COUNT,0) AS PAYMENT_COUNT, COALESCE(W.WISHLIST_PRODUCT_NUM,0) AS WISHLIST_COUNT, PI.FILE_NAME, PI.FILE_EXTENSION, PI.FILE_DIR
FROM PRODUCT P 
LEFT JOIN(
	SELECT R.REVIEW_PRODUCT_NUM, ROUND(AVG(R.REVIEW_STAR),1) AS RATING 
	FROM REVIEW R GROUP BY R.REVIEW_PRODUCT_NUM
)RV ON P.PRODUCT_NUM = RV.REVIEW_PRODUCT_NUM
LEFT JOIN(
	SELECT PA.PAYMENT_PRODUCT_NUM, COUNT(PA.PAYMENT_PRODUCT_NUM) AS PAYMENT_COUNT  
	FROM PAYMENT PA GROUP BY PA.PAYMENT_PRODUCT_NUM
) PM ON P.PRODUCT_NUM = PM.PAYMENT_PRODUCT_NUM
LEFT JOIN (
	SELECT WI.WISHLIST_PRODUCT_NUM, COUNT(WI.WISHLIST_PRODUCT_NUM) AS WISHLIST_COUNT 
	FROM WISHLIST WI GROUP BY WI.WISHLIST_PRODUCT_NUM
)W ON P.PRODUCT_NUM=W.WISHLIST_PRODUCT_NUM
LEFT JOIN (
	SELECT I.FILE_NAME, I.FILE_EXTENSION, I.FILE_DIR, I.PRODUCT_ITEM_NUM 
	FROM (
		SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR,PRODUCT_ITEM_NUM, ROW_NUMBER() OVER(PARTITION BY PRODUCT_ITEM_NUM ORDER BY FILE_NUM)AS RN 
		FROM IMAGEFILE)I 
		WHERE RN = 2
)PI
ON P.PRODUCT_NUM = PI.PRODUCT_ITEM_NUM;




-- 테이블 제약 조건까지 삭제
DROP TABLE PRODUCT CASCADE CONSTRAINT;

-- VIEW 삭제
DROP VIEW PRODUCT_INFO_VIEW;

-- 전체 출력
SELECT * FROM PRODUCT;

-- 권한 확인
SELECT * FROM USER_SYS_PRIVS WHERE USERNAME = 'FISHING';
-- 뷰 생성 권한 확인
SELECT * 
FROM USER_SYS_PRIVS 
WHERE PRIVILEGE = 'CREATE VIEW';

-- 샘플 데이터
-- 중프 : 사장님 / 관리자 기능 없으므로 판매자 ID 제외함 + 사장님이 INSERT 하므로 INSERT 없음
INSERT INTO PRODUCT (PRODUCT_NUM,PRODUCT_NAME,PRODUCT_PRICE,PRODUCT_DETAILS,PRODUCT_CNT,PRODUCT_ADDRESS,PRODUCT_LOCATION,PRODUCT_CATEGORY)
VALUES (NVL((SELECT MAX(PRODUCT_NUM) FROM PRODUCT),0)+1,'우리바다호',80000,'좋은 기억,서비스로 모시겠습니다.',5,'인천 서구','바다','낚시배');
INSERT INTO PRODUCT (PRODUCT_NUM,PRODUCT_NAME,PRODUCT_PRICE,PRODUCT_DETAILS,PRODUCT_CNT,PRODUCT_ADDRESS,PRODUCT_LOCATION,PRODUCT_CATEGORY)
VALUES (NVL((SELECT MAX(PRODUCT_NUM) FROM PRODUCT),0)+1,'만선호',90000,'짜릿한 재미 ! 시원한 경험 ! 최고의 포인트 !',5,'경기 시흥','바다','낚시배');
INSERT INTO PRODUCT (PRODUCT_NUM,PRODUCT_NAME,PRODUCT_PRICE,PRODUCT_DETAILS,PRODUCT_CNT,PRODUCT_ADDRESS,PRODUCT_LOCATION,PRODUCT_CATEGORY)
VALUES (NVL((SELECT MAX(PRODUCT_NUM) FROM PRODUCT),0)+1,'만정낚시터',30000,'낚시터입니다',10,'인천 중구','민물','낚시터');
INSERT INTO PRODUCT (PRODUCT_NUM,PRODUCT_NAME,PRODUCT_PRICE,PRODUCT_DETAILS,PRODUCT_CNT,PRODUCT_ADDRESS,PRODUCT_LOCATION,PRODUCT_CATEGORY)
VALUES (NVL((SELECT MAX(PRODUCT_NUM) FROM PRODUCT),0)+1,'바다낚시터',30000,'바다낚시터!',10,'충남 태안','바다','낚시터');
INSERT INTO PRODUCT (PRODUCT_NUM,PRODUCT_NAME,PRODUCT_PRICE,PRODUCT_DETAILS,PRODUCT_CNT,PRODUCT_ADDRESS,PRODUCT_LOCATION,PRODUCT_CATEGORY)
VALUES (NVL((SELECT MAX(PRODUCT_NUM) FROM PRODUCT),0)+1,'산장낚시터',10000,'산장낚시터입니다~',5,'충남 보령','민물','낚시터');
INSERT INTO PRODUCT (PRODUCT_NUM,PRODUCT_NAME,PRODUCT_PRICE,PRODUCT_DETAILS,PRODUCT_CNT,PRODUCT_ADDRESS,PRODUCT_LOCATION,PRODUCT_CATEGORY)
VALUES (NVL((SELECT MAX(PRODUCT_NUM) FROM PRODUCT),0)+1,'통통낚시배',10000,'통통',5,'경남 통영','민물','낚시배');




-- [selectAll]

-- 1. 상품 목록 전체 출력 (최신순)
-- 상품 번호 / 상품명 / 상품 가격 / 상품 주소 / 상품 장소(바다,민물) / 상품 유형(낚시배, 낚시터) / *별점 / *예약 수 / *찜 수 / *파일명 / *파일확장자 / *파일경로
-- 추가로 전체 목록에서 사진 파일 한개만 전달해주는 기능이 필요함. C에서는 전체 상품 수 만큼 반복문 돌려야 하므로,
-- 전체 출력 해줄 때 함께 전달해주기 (JOIN)
-- 상품 번호 순으로 내림차순  
-- 페이지네이션 기능 구현을 위해 WITH절을 사용, C에서 페이지 번호를 받아와 데이터를 반환해준다.
SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE,PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, FILE_NAME, FILE_EXTENSION, FILE_DIR
FROM (SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE,PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, FILE_NAME, FILE_EXTENSION, FILE_DIR,
	ROW_NUMBER() OVER (ORDER BY PRODUCT_NUM DESC) AS ROW_NUM
	FROM PRODUCT_INFO_VIEW)
WHERE ROW_NUM BETWEEN (COALESCE(1,1)-1)*9+1 AND COALESCE(1,1)*9;

/*
SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE,PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, 
	   FILE_NAME, FILE_EXTENSION, FILE_DIR
FROM (
	SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE,PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, 
		   ILE_NAME, FILE_EXTENSION, FILE_DIR, ROW_NUMBER() OVER (ORDER BY PRODUCT_NUM DESC) AS ROW_NUM
	FROM PRODUCT_INFO_VIEW)
WHERE ROW_NUM 
BETWEEN (COALESCE(?,1)-1)*9+1 AND COALESCE(?,1)*9;
*/


-- 2. 별점순으로 출력
-- 상품 번호 / 상품명 / 상품 가격 / 상품 주소 / 상품 장소(바다,민물) / 상품 유형(낚시배, 낚시터) / *별점 / *예약 수 / *찜 수 / *파일명 / *파일확장자 / *파일경로
-- 상품 번호 == 리뷰 상품 번호 >> LEFT JOIN
-- 리뷰 테이블에서 별점 가져와서 GROUP BY 상품번호, 
-- 별점 ROUND로 소수점 1자리까지 평균내서 보여주고 >> 이 기준으로 내림차순
-- NULL의 경우 제일 큰 값으로 인식하여 NULL인 경우 제일 상단에 배치되므로, COALESCE 함수 사용하여 NULL인 경우 0보다 적은 -1로 설정해 하단 배치
-- 페이지네이션 기능 구현을 위해 WITH절을 사용, C에서 페이지 번호를 받아와 데이터를 반환해준다.
SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE,PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, FILE_NAME, FILE_EXTENSION, FILE_DIR
FROM (SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE,PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, FILE_NAME, FILE_EXTENSION, FILE_DIR,
			ROW_NUMBER() OVER (ORDER BY COALESCE(RATING,-1) DESC) AS ROW_NUM
			FROM PRODUCT_INFO_VIEW)
WHERE ROW_NUM BETWEEN (COALESCE(?,1)-1)*9+1 AND COALESCE(?,1)*9;



-- 3. 예약(결제)많은순 출력
-- 상품 번호 / 상품명 / 상품 가격 / 상품 주소 / 상품 장소(바다,민물) / 상품 유형(낚시배, 낚시터)/ *별점 / *예약 수 / *찜 수 / *파일명 / *파일확장자 / *파일경로
-- 예약 테이블에서 상품번호별로 그룹핑하여, 수 카운트
-- 페이지네이션 기능 구현을 위해 WITH절을 사용, C에서 페이지 번호를 받아와 데이터를 반환해준다.
SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE,PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, FILE_NAME, FILE_EXTENSION, FILE_DIR
FROM (SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE,PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, FILE_NAME, FILE_EXTENSION, FILE_DIR,
			ROW_NUMBER() OVER (ORDER BY COALESCE(PAYMENT_COUNT,-1) DESC) AS ROW_NUM
			FROM PRODUCT_INFO_VIEW)
WHERE ROW_NUM BETWEEN (COALESCE(?,1)-1)*9+1 AND COALESCE(?,1)*9;



-- 4. 찜 많은 순 출력
-- 상품 번호 / 상품명 / 상품 가격 / 상품 주소 / 상품 장소(바다,민물) / 상품 유형(낚시배, 낚시터) /  *별점 / *예약 수 / *찜 수 / *파일명 / *파일확장자 / *파일경로
-- 페이지네이션 기능 구현을 위해 WITH절을 사용, C에서 페이지 번호를 받아와 데이터를 반환해준다.
SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE,PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, FILE_NAME, FILE_EXTENSION, FILE_DIR
FROM (SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE,PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, FILE_NAME, FILE_EXTENSION, FILE_DIR,
			ROW_NUMBER() OVER (ORDER BY COALESCE(WISHLIST_COUNT,-1) DESC) AS ROW_NUM
			FROM PRODUCT_INFO_VIEW)
WHERE ROW_NUM BETWEEN (COALESCE(?,1)-1)*9+1 AND COALESCE(?,1)*9;



-- 5. 상품 키워드(단어)로 검색 >> 상품명에서 검색
-- 상품 번호 / 상품명 / 상품 가격 / 상품 주소 / 상품 장소(바다,민물) / 상품 유형(낚시배, 낚시터) /  *별점 / *예약 수 / *찜 수 /  *파일명 / *파일확장자 / *파일경로
-- 페이지네이션 기능 구현을 위해 WITH절을 사용, C에서 페이지 번호를 받아와 데이터를 반환해준다.
SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE,PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, FILE_NAME, FILE_EXTENSION, FILE_DIR
FROM (SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE,PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, FILE_NAME, FILE_EXTENSION, FILE_DIR,
			ROW_NUMBER() OVER (ORDER BY PRODUCT_NUM DESC) AS ROW_NUM
			FROM PRODUCT_INFO_VIEW WHERE PRODUCT_NAME LIKE '%'||?||'%')
WHERE ROW_NUM BETWEEN (COALESCE(?,1)-1)*9+1 AND COALESCE(?,1)*9;



-- 6. ▼필터링 검색 기능
-- 장소(바다,민물)별 검색
-- 유형(낚시배, 낚시터)별 검색
-- 장소(바다,민물) + 유형(낚시배, 낚시터) 검색
-- 상품 번호 / 상품명 / 상품 가격 / 상품 주소 / 상품 장소(바다,민물) / 상품 유형(낚시배, 낚시터) /  *별점 / *예약 수 / *찜 수 / *파일명 / *파일확장자 / *파일경로
-- 페이지네이션 기능 구현을 위해 WITH절을 사용, C에서 페이지 번호를 받아와 데이터를 반환해준다.
SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE,PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, FILE_NAME, FILE_EXTENSION, FILE_DIR
FROM (SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE,PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY, RATING, PAYMENT_COUNT, WISHLIST_COUNT, FILE_NAME, FILE_EXTENSION, FILE_DIR,
			ROW_NUMBER() OVER (ORDER BY PRODUCT_NUM DESC) AS ROW_NUM
			FROM PRODUCT_INFO_VIEW
			WHERE (PRODUCT_LOCATION = COALESCE(?,PRODUCT_LOCATION)) AND (PRODUCT_CATEGORY = COALESCE(?,PRODUCT_CATEGORY)))
WHERE ROW_NUM BETWEEN (COALESCE(?,1)-1)*9+1 AND COALESCE(?,1)*9;




-- [selectOne]

-- 1. 상품 상세보기
-- 상품 번호 / 상품명 / 상품 가격 / 상품 설명 / 상품 주소 / 상품 장소(바다,민물) / 상품 유형(낚시배, 낚시터) / *별점 / *예약 수 / *찜 수 
SELECT PRODUCT_NUM, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_DETAILS, PRODUCT_ADDRESS, PRODUCT_LOCATION, PRODUCT_CATEGORY,
(SELECT COALESCE(ROUND(AVG(R.REVIEW_STAR),1),0) FROM REVIEW R WHERE R.REVIEW_PRODUCT_NUM=PRODUCT_NUM) AS RATING,
(SELECT COUNT(PA.PAYMENT_PRODUCT_NUM) FROM PAYMENT PA WHERE PA.PAYMENT_PRODUCT_NUM=PRODUCT_NUM) AS PAYMENT_COUNT,
(SELECT COUNT(W.WISHLIST_PRODUCT_NUM) FROM WISHLIST W WHERE W.WISHLIST_PRODUCT_NUM=PRODUCT_NUM) AS WISHLIST_COUNT
FROM PRODUCT
WHERE PRODUCT_NUM = ?;


-- 2. 사용자가 선택한 일자의 재고 보기
-- 상품번호 / *재고(등록된 재고 - 선택한일자의 예약 수)
-- 예약 테이블의 상품번호와 내가 선택한 상품의 번호가 같은 내역,
-- 사용자가 선택한 날짜의 예약일자를 찾아 그 수를 COUNT,
-- 상품의 기본 재고 수 - COUNT 한 값을 보여준다. 
-- RESERVATION_REGISTRATION_DATE / PRODUCT_NUM 받아와야 한다.
SELECT P.PRODUCT_NUM, (P.PRODUCT_CNT - COALESCE(RS.RESERVATION_COUNT,0)) AS CURRENT_STOCK
FROM PRODUCT P
LEFT JOIN(SELECT PA.PAYMENT_PRODUCT_NUM AS PRODUCT_NUM, COUNT(R.RESERVATION_REGISTRATION_DATE) AS RESERVATION_COUNT FROM RESERVATION R JOIN PAYMENT PA ON R.RESERVATION_PAYMENT_NUM= PA.PAYMENT_NUM WHERE R.RESERVATION_REGISTRATION_DATE=? GROUP BY PA.PAYMENT_PRODUCT_NUM)RS ON P.PRODUCT_NUM=RS.PRODUCT_NUM
WHERE P.PRODUCT_NUM = ?;


-- 3. 전체 페이지 수를 반환하는 select문 (페이지네이션 사용)
-- [전체 검색 - 기본]
SELECT CEIL(COALESCE(COUNT(PRODUCT_NUM),0)/9.0)AS PRODUCT_TOTAL_PAGE FROM PRODUCT WHERE 1=1;
-- 아래는 AND~ 쿼리 사용
-- [키워드 검색]
SELECT CEIL(COALESCE(COUNT(PRODUCT_NUM),0)/9.0)AS PRODUCT_TOTAL_PAGE FROM PRODUCT WHERE 1=1
AND PRODUCT_NAME LIKE '%'||?||'%';
-- [필터링 검색]
SELECT CEIL(COALESCE(COUNT(PRODUCT_NUM),0)/9.0)AS PRODUCT_TOTAL_PAGE FROM PRODUCT WHERE 1=1
AND PRODUCT_LOCATION = COALESCE(?,PRODUCT_LOCATION) AND PRODUCT_CATEGORY = COALESCE(?,PRODUCT_CATEGORY);

/*
SELECT P.PRODUCT_NUM, P.PRODUCT_NAME, P.PRODUCT_PRICE,P.PRODUCT_ADDRESS, P.PRODUCT_LOCATION, P.PRODUCT_CATEGORY,COALESCE(RV.RATING,0) AS RATING,
COALESCE(RS.RESERVATION_COUNT,0) AS RESERVATION_COUNT, COALESCE(W.WISHLIST_PRODUCT_NUM,0) AS WISHLIST_COUNT, I.FILE_NAME, I.FILE_EXTENSION, I.FILE_DIR
FROM PRODUCT P 
LEFT JOIN(
	SELECT R.REVIEW_PRODUCT_NUM, ROUND(AVG(R.REVIEW_STAR),1) AS RATING 
	FROM REVIEW R GROUP BY R.REVIEW_PRODUCT_NUM
)RV ON P.PRODUCT_NUM = RV.REVIEW_PRODUCT_NUM
LEFT JOIN(
	SELECT RE.RESERVATION_PRODUCT_NUM, COUNT(RE.RESERVATION_PRODUCT_NUM) AS RESERVATION_COUNT  
	FROM RESERVATION RE GROUP BY RE.RESERVATION_PRODUCT_NUM
) RS ON P.PRODUCT_NUM = RS.RESERVATION_PRODUCT_NUM
LEFT JOIN (
	SELECT WI.WISHLIST_PRODUCT_NUM, COUNT(WI.WISHLIST_PRODUCT_NUM) AS WISHLIST_COUNT 
	FROM WISHLIST WI GROUP BY WI.WISHLIST_PRODUCT_NUM
)W ON P.PRODUCT_NUM=W.WISHLIST_PRODUCT_NUM
LEFT JOIN (
	SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR, ITEM_NUM 
	FROM (
		SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR,ITEM_NUM, ROW_NUMBER() OVER(PARTITION BY ITEM_NUM ORDER BY FILE_NUM)AS RN 
		FROM IMAGEFILE 
		WHERE FILE_CONDITION=1
	)
	WHERE RN=2
)I ON P.PRODUCT_NUM = I.ITEM_NUM
ORDER BY PRODUCT_NUM DESC;
*/



/*
 24.09.18 selectAll 기능 쿼리가 동일한 내용/JOIN이 반복되고 있어서 VIEW 테이블 생성으로 쿼리 변경
-- [selectALL]

-- 1. 상품 목록 전체 출력 (최신순)
-- 상품 번호 / 상품명 / 상품 가격 / 상품 주소 / 상품 장소(바다,민물) / 상품 유형(낚시배, 낚시터) / *별점 / *예약 수 / *찜 수 / *파일명 / *파일확장자 / *파일경로
-- 추가로 전체 목록에서 사진 파일 한개만 전달해주는 기능이 필요함. C에서는 전체 상품 수 만큼 반복문 돌려야 하므로,
-- 전체 출력 해줄 때 함께 전달해주기 (JOIN) / 참고 : 파일 컨디션_상품 1번
--> PARTITION 사용해서 ITEM_NUM 기준 설정하고, FILE_NUM 기준 오름차순
-- 상품 번호 순으로 내림차순
/*
SELECT P.PRODUCT_NUM, P.PRODUCT_NAME, P.PRODUCT_PRICE,P.PRODUCT_ADDRESS, P.PRODUCT_LOCATION, P.PRODUCT_CATEGORY,COALESCE(RV.RATING,0) AS RATING,
COALESCE(RS.RESERVATION_COUNT,0) AS RESERVATION_COUNT, COALESCE(W.WISHLIST_PRODUCT_NUM,0) AS WISHLIST_COUNT, 
I.FILE_NAME, I.FILE_EXTENSION, I.FILE_DIR
FROM PRODUCT P 
LEFT JOIN(SELECT R.REVIEW_PRODUCT_NUM, ROUND(AVG(R.REVIEW_STAR),1) AS RATING FROM REVIEW R GROUP BY R.REVIEW_PRODUCT_NUM)RV ON P.PRODUCT_NUM = RV.REVIEW_PRODUCT_NUM
LEFT JOIN(SELECT RE.RESERVATION_PRODUCT_NUM, COUNT(RE.RESERVATION_PRODUCT_NUM) AS RESERVATION_COUNT  FROM RESERVATION RE GROUP BY RE.RESERVATION_PRODUCT_NUM) RS ON P.PRODUCT_NUM = RS.RESERVATION_PRODUCT_NUM
LEFT JOIN (SELECT WI.WISHLIST_PRODUCT_NUM, COUNT(WI.WISHLIST_PRODUCT_NUM) AS WISHLIST_COUNT FROM WISHLIST WI GROUP BY WI.WISHLIST_PRODUCT_NUM)W ON P.PRODUCT_NUM=W.WISHLIST_PRODUCT_NUM
LEFT JOIN (SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR, ITEM_NUM FROM (SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR,ITEM_NUM, ROW_NUMBER() OVER(PARTITION BY ITEM_NUM ORDER BY FILE_NUM)AS RN FROM IMAGEFILE WHERE FILE_CONDITION=1)WHERE RN=1)I ON P.PRODUCT_NUM = I.ITEM_NUM
ORDER BY PRODUCT_NUM DESC;
*/

SELECT P.PRODUCT_NUM, P.PRODUCT_NAME, P.PRODUCT_PRICE,P.PRODUCT_ADDRESS, P.PRODUCT_LOCATION, P.PRODUCT_CATEGORY,COALESCE(RV.RATING,0) AS RATING,
COALESCE(PM.PAYMENT_COUNT,0) AS PAYMENT_COUNT, COALESCE(W.WISHLIST_PRODUCT_NUM,0) AS WISHLIST_COUNT, 
I.FILE_NAME, I.FILE_EXTENSION, I.FILE_DIR
FROM PRODUCT P 
LEFT JOIN(SELECT R.REVIEW_PRODUCT_NUM, ROUND(AVG(R.REVIEW_STAR),1) AS RATING FROM REVIEW R GROUP BY R.REVIEW_PRODUCT_NUM)RV ON P.PRODUCT_NUM = RV.REVIEW_PRODUCT_NUM
LEFT JOIN(SELECT PA.PAYMENT_PRODUCT_NUM, COUNT(PA.PAYMENT_PRODUCT_NUM) AS PAYMENT_COUNT  FROM PAYMENT PA GROUP BY PA.PAYMENT_PRODUCT_NUM) PM ON P.PRODUCT_NUM = PM.PAYMENT_PRODUCT_NUM
LEFT JOIN (SELECT WI.WISHLIST_PRODUCT_NUM, COUNT(WI.WISHLIST_PRODUCT_NUM) AS WISHLIST_COUNT FROM WISHLIST WI GROUP BY WI.WISHLIST_PRODUCT_NUM)W ON P.PRODUCT_NUM=W.WISHLIST_PRODUCT_NUM
LEFT JOIN (SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR, ITEM_NUM FROM (SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR,ITEM_NUM, ROW_NUMBER() OVER(PARTITION BY ITEM_NUM ORDER BY FILE_NUM)AS RN FROM IMAGEFILE WHERE FILE_CONTENT_TYPE='상품')WHERE RN=1)I ON P.PRODUCT_NUM = I.ITEM_NUM
ORDER BY PRODUCT_NUM DESC;

-- 2. 별점순으로 출력
-- 상품 번호 / 상품명 / 상품 가격 / 상품 주소 / 상품 장소(바다,민물) / 상품 유형(낚시배, 낚시터) / *별점 / *예약 수 / *찜 수 / *파일명 / *파일확장자 / *파일경로
-- 상품 번호 == 리뷰 상품 번호 >> LEFT JOIN
-- 리뷰 테이블에서 별점 가져와서 GROUP BY 상품번호, 
-- 별점 ROUND로 소수점 1자리까지 평균내서 보여주고 >> 이 기준으로 내림차순
-- NULL의 경우 제일 큰 값으로 인식하여 NULL인 경우 제일 상단에 배치되므로, COALESCE 함수 사용하여 NULL인 경우 0보다 적은 -1로 설정해 하단 배치
SELECT P.PRODUCT_NUM, P.PRODUCT_NAME, P.PRODUCT_PRICE,P.PRODUCT_ADDRESS, P.PRODUCT_LOCATION, P.PRODUCT_CATEGORY,COALESCE(RV.RATING,0) AS RATING,
COALESCE(PM.PAYMENT_COUNT,0) AS PAYMENT_COUNT, COALESCE(W.WISHLIST_PRODUCT_NUM,0) AS WISHLIST_COUNT, 
I.FILE_NAME, I.FILE_EXTENSION, I.FILE_DIR
FROM PRODUCT P 
LEFT JOIN(SELECT R.REVIEW_PRODUCT_NUM, ROUND(AVG(R.REVIEW_STAR),1) AS RATING FROM REVIEW R GROUP BY R.REVIEW_PRODUCT_NUM)RV ON P.PRODUCT_NUM = RV.REVIEW_PRODUCT_NUM
LEFT JOIN(SELECT PA.PAYMENT_PRODUCT_NUM, COUNT(PA.PAYMENT_PRODUCT_NUM) AS PAYMENT_COUNT  FROM PAYMENT PA GROUP BY PA.PAYMENT_PRODUCT_NUM) PM ON P.PRODUCT_NUM = PM.PAYMENT_PRODUCT_NUM
LEFT JOIN (SELECT WI.WISHLIST_PRODUCT_NUM, COUNT(WI.WISHLIST_PRODUCT_NUM) AS WISHLIST_COUNT FROM WISHLIST WI GROUP BY WI.WISHLIST_PRODUCT_NUM)W ON P.PRODUCT_NUM=W.WISHLIST_PRODUCT_NUM
LEFT JOIN (SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR, ITEM_NUM FROM (SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR,ITEM_NUM, ROW_NUMBER() OVER(PARTITION BY ITEM_NUM ORDER BY FILE_NUM)AS RN FROM IMAGEFILE WHERE FILE_CONTENT_TYPE='상품')WHERE RN=1)I ON P.PRODUCT_NUM = I.ITEM_NUM
ORDER BY COALESCE(RV.RATING,-1) DESC;

-- 3. 예약(결제)많은순 출력
-- 상품 번호 / 상품명 / 상품 가격 / 상품 주소 / 상품 장소(바다,민물) / 상품 유형(낚시배, 낚시터)/ *별점 / *예약 수 / *찜 수 / *파일명 / *파일확장자 / *파일경로
-- 예약 테이블에서 상품번호별로 그룹핑하여, 수 카운트
SELECT P.PRODUCT_NUM, P.PRODUCT_NAME, P.PRODUCT_PRICE,P.PRODUCT_ADDRESS, P.PRODUCT_LOCATION, P.PRODUCT_CATEGORY,COALESCE(RV.RATING,0) AS RATING,
COALESCE(PM.PAYMENT_COUNT,0) AS PAYMENT_COUNT, COALESCE(W.WISHLIST_PRODUCT_NUM,0) AS WISHLIST_COUNT, 
I.FILE_NAME, I.FILE_EXTENSION, I.FILE_DIR
FROM PRODUCT P 
LEFT JOIN(SELECT R.REVIEW_PRODUCT_NUM, ROUND(AVG(R.REVIEW_STAR),1) AS RATING FROM REVIEW R GROUP BY R.REVIEW_PRODUCT_NUM)RV ON P.PRODUCT_NUM = RV.REVIEW_PRODUCT_NUM
LEFT JOIN(SELECT PA.PAYMENT_PRODUCT_NUM, COUNT(PA.PAYMENT_PRODUCT_NUM) AS PAYMENT_COUNT  FROM PAYMENT PA GROUP BY PA.PAYMENT_PRODUCT_NUM) PM ON P.PRODUCT_NUM = PM.PAYMENT_PRODUCT_NUM
LEFT JOIN (SELECT WI.WISHLIST_PRODUCT_NUM, COUNT(WI.WISHLIST_PRODUCT_NUM) AS WISHLIST_COUNT FROM WISHLIST WI GROUP BY WI.WISHLIST_PRODUCT_NUM)W ON P.PRODUCT_NUM=W.WISHLIST_PRODUCT_NUM
LEFT JOIN (SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR, ITEM_NUM FROM (SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR,ITEM_NUM, ROW_NUMBER() OVER(PARTITION BY ITEM_NUM ORDER BY FILE_NUM)AS RN FROM IMAGEFILE WHERE FILE_CONTENT_TYPE='상품')WHERE RN=1)I ON P.PRODUCT_NUM = I.ITEM_NUM
ORDER BY COALESCE(PM.PAYMENT_COUNT ,-1) DESC;

-- 4. 찜 많은 순 출력
-- 상품 번호 / 상품명 / 상품 가격 / 상품 주소 / 상품 장소(바다,민물) / 상품 유형(낚시배, 낚시터) /  *별점 / *예약 수 / *찜 수 / *파일명 / *파일확장자 / *파일경로
SELECT P.PRODUCT_NUM, P.PRODUCT_NAME, P.PRODUCT_PRICE,P.PRODUCT_ADDRESS, P.PRODUCT_LOCATION, P.PRODUCT_CATEGORY,COALESCE(RV.RATING,0) AS RATING,
COALESCE(PM.PAYMENT_COUNT,0) AS PAYMENT_COUNT, COALESCE(W.WISHLIST_PRODUCT_NUM,0) AS WISHLIST_COUNT, 
I.FILE_NAME, I.FILE_EXTENSION, I.FILE_DIR
FROM PRODUCT P 
LEFT JOIN(SELECT R.REVIEW_PRODUCT_NUM, ROUND(AVG(R.REVIEW_STAR),1) AS RATING FROM REVIEW R GROUP BY R.REVIEW_PRODUCT_NUM)RV ON P.PRODUCT_NUM = RV.REVIEW_PRODUCT_NUM
LEFT JOIN(SELECT PA.PAYMENT_PRODUCT_NUM, COUNT(PA.PAYMENT_PRODUCT_NUM) AS PAYMENT_COUNT  FROM PAYMENT PA GROUP BY PA.PAYMENT_PRODUCT_NUM) PM ON P.PRODUCT_NUM = PM.PAYMENT_PRODUCT_NUM
LEFT JOIN (SELECT WI.WISHLIST_PRODUCT_NUM, COUNT(WI.WISHLIST_PRODUCT_NUM) AS WISHLIST_COUNT FROM WISHLIST WI GROUP BY WI.WISHLIST_PRODUCT_NUM)W ON P.PRODUCT_NUM=W.WISHLIST_PRODUCT_NUM
LEFT JOIN (SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR, ITEM_NUM FROM (SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR,ITEM_NUM, ROW_NUMBER() OVER(PARTITION BY ITEM_NUM ORDER BY FILE_NUM)AS RN FROM IMAGEFILE WHERE FILE_CONTENT_TYPE='상품')WHERE RN=1)I ON P.PRODUCT_NUM = I.ITEM_NUM
ORDER BY COALESCE(W.WISHLIST_PRODUCT_NUM,-1) DESC;


-- 5. 상품 키워드(단어)로 검색 >> 상품명에서 검색
-- 상품 번호 / 상품명 / 상품 가격 / 상품 주소 / 상품 장소(바다,민물) / 상품 유형(낚시배, 낚시터) /  *별점 / *예약 수 / *찜 수 /  *파일명 / *파일확장자 / *파일경로
SELECT P.PRODUCT_NUM, P.PRODUCT_NAME, P.PRODUCT_PRICE,P.PRODUCT_ADDRESS, P.PRODUCT_LOCATION, P.PRODUCT_CATEGORY,COALESCE(RV.RATING,0) AS RATING,
COALESCE(PM.PAYMENT_COUNT,0) AS PAYMENT_COUNT, COALESCE(W.WISHLIST_PRODUCT_NUM,0) AS WISHLIST_COUNT, 
I.FILE_NAME, I.FILE_EXTENSION, I.FILE_DIR
FROM PRODUCT P 
LEFT JOIN(SELECT R.REVIEW_PRODUCT_NUM, ROUND(AVG(R.REVIEW_STAR),1) AS RATING FROM REVIEW R GROUP BY R.REVIEW_PRODUCT_NUM)RV ON P.PRODUCT_NUM = RV.REVIEW_PRODUCT_NUM
LEFT JOIN(SELECT PA.PAYMENT_PRODUCT_NUM, COUNT(PA.PAYMENT_PRODUCT_NUM) AS PAYMENT_COUNT  FROM PAYMENT PA GROUP BY PA.PAYMENT_PRODUCT_NUM) PM ON P.PRODUCT_NUM = PM.PAYMENT_PRODUCT_NUM
LEFT JOIN (SELECT WI.WISHLIST_PRODUCT_NUM, COUNT(WI.WISHLIST_PRODUCT_NUM) AS WISHLIST_COUNT FROM WISHLIST WI GROUP BY WI.WISHLIST_PRODUCT_NUM)W ON P.PRODUCT_NUM=W.WISHLIST_PRODUCT_NUM
LEFT JOIN (SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR, ITEM_NUM FROM (SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR,ITEM_NUM, ROW_NUMBER() OVER(PARTITION BY ITEM_NUM ORDER BY FILE_NUM)AS RN FROM IMAGEFILE WHERE FILE_CONTENT_TYPE='상품')WHERE RN=1)I ON P.PRODUCT_NUM = I.ITEM_NUM
WHERE P.PRODUCT_NAME LIKE '%'||?||'%' ORDER BY PRODUCT_NUM DESC;


-- 6. ▼필터링 검색 기능
-- 장소(바다,민물)별 검색
-- 유형(낚시배, 낚시터)별 검색
-- 장소(바다,민물) + 유형(낚시배, 낚시터) 검색
-- 상품 번호 / 상품명 / 상품 가격 / 상품 주소 / 상품 장소(바다,민물) / 상품 유형(낚시배, 낚시터) /  *별점 / *예약 수 / *찜 수 / *파일명 / *파일확장자 / *파일경로
SELECT P.PRODUCT_NUM, P.PRODUCT_NAME, P.PRODUCT_PRICE,P.PRODUCT_ADDRESS, P.PRODUCT_LOCATION, P.PRODUCT_CATEGORY,COALESCE(RV.RATING,0) AS RATING,
COALESCE(PM.PAYMENT_COUNT,0) AS PAYMENT_COUNT, COALESCE(W.WISHLIST_PRODUCT_NUM,0) AS WISHLIST_COUNT, 
I.FILE_NAME, I.FILE_EXTENSION, I.FILE_DIR
FROM PRODUCT P 
LEFT JOIN(SELECT R.REVIEW_PRODUCT_NUM, ROUND(AVG(R.REVIEW_STAR),1) AS RATING FROM REVIEW R GROUP BY R.REVIEW_PRODUCT_NUM)RV ON P.PRODUCT_NUM = RV.REVIEW_PRODUCT_NUM
LEFT JOIN(SELECT PA.PAYMENT_PRODUCT_NUM, COUNT(PA.PAYMENT_PRODUCT_NUM) AS PAYMENT_COUNT  FROM PAYMENT PA GROUP BY PA.PAYMENT_PRODUCT_NUM) PM ON P.PRODUCT_NUM = PM.PAYMENT_PRODUCT_NUM
LEFT JOIN (SELECT WI.WISHLIST_PRODUCT_NUM, COUNT(WI.WISHLIST_PRODUCT_NUM) AS WISHLIST_COUNT FROM WISHLIST WI GROUP BY WI.WISHLIST_PRODUCT_NUM)W ON P.PRODUCT_NUM=W.WISHLIST_PRODUCT_NUM
LEFT JOIN (SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR, ITEM_NUM FROM (SELECT FILE_NAME, FILE_EXTENSION, FILE_DIR,ITEM_NUM, ROW_NUMBER() OVER(PARTITION BY ITEM_NUM ORDER BY FILE_NUM)AS RN FROM IMAGEFILE WHERE FILE_CONTENT_TYPE='상품')WHERE RN=1)I ON P.PRODUCT_NUM = I.ITEM_NUM
WHERE (P.PRODUCT_LOCATION = COALESCE(?,P.PRODUCT_LOCATION)) AND (P.PRODUCT_CATEGORY = COALESCE(?,P.PRODUCT_CATEGORY))
ORDER BY P.PRODUCT_NUM DESC;
--WHERE절 : COALESCE 사용하여 NULL 값이라면 컬럼 전체 출력

*/

