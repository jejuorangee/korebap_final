CREATE TABLE REPLY( -- 댓글
   REPLY_NUM INT PRIMARY KEY, -- 댓글 번호 PK
   REPLY_CONTENT VARCHAR(100) NOT NULL, -- 댓글 내용
   REPLY_WRITER_ID VARCHAR(50) NOT NULL, -- 작성자 FK 
   REPLY_REGISTRATION_DATE DATE DEFAULT SYSDATE, -- 작성 날짜
   REPLY_PRIVATE NUMBER(1) DEFAULT 0 CHECK (REPLY_PRIVATE IN (0, 1)), -- 댓글 비공개
   -- ORACLE에서 BOOLEAN 타입 설정이 불가하므로 NUMBER(1) 타입을 설정해 한 자리 수만 저장할 수 있도록 설정 24.08
   -- 0이면 FALSE(공개) 1이면 TRUE(비공개) 24.08
   -- 멤버변수 타입 boolean 에서 int 타입으로 변경됨. 24.09.03
   -- Oracle에서는 int 타입 자동으로 NUMBER 타입으로 변경된다고 하여 한 자리 수만 저장되는 NUMBER(1) 타입 유지 24.09.03
   REPLY_BOARD_NUM INT NOT NULL -- 글 번호 FK
);
-- 테이블 삭제
DROP TABLE REPLY;
-- 전체 출력
SELECT * FROM REPLY;
-- 샘플 데이터
INSERT INTO REPLY (REPLY_NUM,REPLY_CONTENT,REPLY_WRITER_ID,REPLY_REGISTRATION_DATE,REPLY_PRIVATE,REPLY_BOARD_NUM) VALUES (NVL((SELECT MAX(REPLY_NUM) FROM REPLY),0)+1,'ㅎㅇㅎㅇ','MOOGUN3852@naver.com',SYSDATE,0,1);
INSERT INTO REPLY (REPLY_NUM,REPLY_CONTENT,REPLY_WRITER_ID,REPLY_REGISTRATION_DATE,REPLY_PRIVATE,REPLY_BOARD_NUM) VALUES (NVL((SELECT MAX(REPLY_NUM) FROM REPLY),0)+1,'ㅎㅇㅎㅇ','wlsrja3852@naver.com',SYSDATE,0,3);
INSERT INTO REPLY (REPLY_NUM,REPLY_CONTENT,REPLY_WRITER_ID,REPLY_REGISTRATION_DATE,REPLY_PRIVATE,REPLY_BOARD_NUM) VALUES (NVL((SELECT MAX(REPLY_NUM) FROM REPLY),0)+1,'반가워요','wlsrja3852@naver.com',SYSDATE,0,1);
INSERT INTO REPLY (REPLY_NUM,REPLY_CONTENT,REPLY_WRITER_ID,REPLY_REGISTRATION_DATE,REPLY_PRIVATE,REPLY_BOARD_NUM) VALUES (NVL((SELECT MAX(REPLY_NUM) FROM REPLY),0)+1,'대박','tlsektha3852@naver.com',SYSDATE,0,2);
INSERT INTO REPLY (REPLY_NUM,REPLY_CONTENT,REPLY_WRITER_ID,REPLY_REGISTRATION_DATE,REPLY_PRIVATE,REPLY_BOARD_NUM) VALUES (NVL((SELECT MAX(REPLY_NUM) FROM REPLY),0)+1,'비공개임','tlsektha3852@naver.com',SYSDATE,1,2);
INSERT INTO REPLY (REPLY_NUM,REPLY_CONTENT,REPLY_WRITER_ID,REPLY_PRIVATE,REPLY_BOARD_NUM) VALUES (NVL((SELECT MAX(REPLY_NUM) FROM REPLY),0)+1,'날이 추워지면.. 방어','tlsektha3852@naver.com',0,9);

--FK 제약조건 (댓글 작성자)
ALTER TABLE REPLY -- REPLY 테이블 변경
ADD CONSTRAINT FK_REPLY_WRITER_ID -- 제약조건 추가, REPLY_WRITER_ID
FOREIGN KEY (REPLY_WRITER_ID) -- FK키는 REPLY_WRITER_ID
REFERENCES MEMBER(MEMBER_ID) -- MEMBER 테이블의 MEMBER_ID 값에 의존
ON DELETE CASCADE; -- 회원 탈퇴시에 댓글도 삭제

--FK 제약조건 (글 번호)
ALTER TABLE REPLY -- REPLY 테이블 변경
ADD CONSTRAINT FK_REPLY_BOARD_NUM -- 제약조건 추가, REPLY_BOARD_NUM
FOREIGN KEY (REPLY_BOARD_NUM) -- FK는 REPLY_BOARD_NUM
REFERENCES BOARD(BOARD_NUM) -- 그 FK키는 BOARD테이블의 BOARD_NUM에 의존
ON DELETE CASCADE; -- 글 삭제시 댓글 삭제

/*
-- 제약조건 삭제
ALTER TABLE REPLY
DROP CONSTRAINT FK_BOARDNUM;

-- 제약조건 확인
SELECT constraint_name
FROM user_constraints
WHERE table_name = 'REPLY' AND constraint_type = 'R';
*/

-- 댓글 작성
-- PK값인 REPLY_NUM은 사용자가 지정 불가하며 시스템에서 설정해줘야 하므로 MAX값 찾아서 +1
--INSERT INTO REPLY (REPLY_NUM,REPLY_CONTENT,REPLY_WRITER_ID,REPLY_REGISTRATION_DATE,REPLY_PRIVATE,REPLY_BOARD_NUM) 
--(NVL((SELECT MAX(REPLY_NUM) FROM REPLY),0)+1,?,?,SYSDATE,?,?);

INSERT INTO REPLY (REPLY_NUM,REPLY_CONTENT,REPLY_WRITER_ID,REPLY_PRIVATE,REPLY_BOARD_NUM) 
VALUES (COALESCE((SELECT MAX(REPLY_NUM) FROM REPLY),0)+1,?,?,?,?);



-- 댓글 수정 (댓글 내용, 댓글 비공개 여부 한 번에)
UPDATE REPLY SET REPLY_CONTENT=?, REPLY_PRIVATE=? WHERE REPLY_NUM=?;

-- 댓글 삭제
DELETE FROM REPLY WHERE REPLY_NUM=?;

-- 댓글 전체 출력 (게시글에서 보여주기 위함)
-- 댓글 번호 / 댓글 내용 / *작성자(ID) / *작성자(닉네임) / *작성자 레벨 / 작성 날짜 / 댓글 공개여부 / 멤버의 프로필 사진
-- 글과 함께 보여야 하기 때문에 글번호 확인 필요함
-- MEMBER 테이블의 닉네임 가져와야 해서 JOIN 사용
-- 게시글이 없는 댓글은 없으므로 BOARD 테이블도 일반 JOIN
-- 댓글 작성자가 작성한 게시글을 COUNT해서 LV로 보여줘야 함
-- 게시글이 없는 댓글 작성자가 있을 수 있으니 LEFT JOIN,
-- 댓글 작성자가 올린 게시글은 없을 수 있으므로 COALESCE 사용하여 LEVEL이 NULL이면 1 반환
SELECT R.REPLY_NUM,R.REPLY_CONTENT,R.REPLY_WRITER_ID, M.MEMBER_NICKNAME ,COALESCE(ML.LV_COUNT,1) AS MEMBER_LEVEL,R.REPLY_REGISTRATION_DATE,R.REPLY_PRIVATE, M.MEMBER_PROFILE
FROM REPLY R
JOIN MEMBER M ON R.REPLY_WRITER_ID = M.MEMBER_ID
JOIN BOARD B ON R.REPLY_BOARD_NUM = B.BOARD_NUM
LEFT JOIN (SELECT B.BOARD_WRITER_ID,COUNT(B.BOARD_WRITER_ID) AS LV_COUNT FROM BOARD B GROUP BY B.BOARD_WRITER_ID)ML ON R.REPLY_WRITER_ID=ML.BOARD_WRITER_ID
WHERE B.BOARD_NUM=? ORDER BY REPLY_NUM DESC;




