CREATE TABLE IMAGEFILE( -- 파일
   FILE_NUM INT PRIMARY KEY, -- 파일 번호 PK
   FILE_ORIGINAL_NAME VARCHAR(100) NOT NULL,-- 파일 원본 이름
   FILE_NAME VARCHAR(2000) NOT NULL, -- 파일 이름 (저장되는 이름)
   FILE_EXTENSION VARCHAR(2000) NOT NULL, -- 파일 확장자
   FILE_DIR VARCHAR(2000) DEFAULT 'default.jpg', -- 파일 경로
   BOARD_ITEM_NUM INT,--  게시글 번호 FK
   PRODUCT_ITEM_NUM INT -- 상품 번호 FK
);


-- 복합키 사용 문의!!
-- 제약조건은 필요하지 않음(실제로는 사용하지않음) : 제약조건을 걸게 되면 제한이 많음
-- 다만 가지고 올 때 상품번호와 + 글/상품 구분 두 가지를 가지고 와서 구분을 해줌


-- 이 default 이미지가 경로 속에 이미 저장이 되어 있기 때문에, 이 쿼리는 단순히 기능을 알려주는 쿼리이다.
-- 만약 사용자가 이미지를 업로드해서 INSERT를 하는 경우 위 쿼리를 사용하는거고,
-- 업로드 하지 않는다면 C에서 경로에 저장된 default.jpg 이미지를 보여주게 됨.

--FK제약조건 (상품)
ALTER TABLE IMAGEFILE -- IMAGEFILE을 수정한다
ADD CONSTRAINT FK_PRODUCT_ITEM_NUM -- FK 제약조건을 추가한다. 제약조건 이름은 FK_PRODUCT_ITEM_NUM
FOREIGN KEY (PRODUCT_ITEM_NUM) -- ITEM_NUM가 FK
REFERENCES PRODUCT(PRODUCT_NUM) --그 FK 값은 PRODUCT테이블의 PRODUCT_NUM에서 가져온다.
ON DELETE CASCADE; 

--FK제약조건 (게시판)
ALTER TABLE IMAGEFILE -- IMAGEFILE을 수정한다
ADD CONSTRAINT FK_BOARD_ITEM_NUM -- FK 제약조건을 추가한다. 제약조건 이름은 FK_BOARD_ITEM_NUM
FOREIGN KEY (BOARD_ITEM_NUM) -- ITEM_NUM가 FK
REFERENCES BOARD(BOARD_NUM) --그 FK 값은 BOARD테이블의 BOARD_NUM 가져온다.
ON DELETE CASCADE;


-- 테이블 삭제
DROP TABLE IMAGEFILE cascade CONSTRAINT;
-- 테이블 전체 출력
SELECT * FROM IMAGEFILE;

-- 샘플데이터
INSERT INTO IMAGEFILE (FILE_NUM,FILE_ORIGINAL_NAME,FILE_NAME,FILE_EXTENSION,FILE_DIR,BOARD_ITEM_NUM)  
VALUES (COALESCE((SELECT MAX(FILE_NUM) FROM IMAGEFILE),0)+1,'sample1','test01','jpg','test01.jpg',3);
INSERT INTO IMAGEFILE (FILE_NUM,FILE_ORIGINAL_NAME,FILE_NAME,FILE_EXTENSION,FILE_DIR,PRODUCT_ITEM_NUM)  
VALUES (COALESCE((SELECT MAX(FILE_NUM) FROM IMAGEFILE),0)+1,'sample2','test02','jpg','test02.jpg',3);



CREATE TABLE IMAGEFILE( -- 파일
   FILE_NUM INT PRIMARY KEY, -- 파일 번호 PK
   FILE_ORIGINAL_NAME VARCHAR(100) NOT NULL,-- 파일 원본 이름
   FILE_NAME VARCHAR(2000) NOT NULL, -- 파일 이름 (저장되는 이름)
   FILE_EXTENSION VARCHAR(2000) NOT NULL, -- 파일 확장자
   FILE_DIR VARCHAR(2000) DEFAULT 'default.jpg', -- 파일 경로
   BOARD_ITEM_NUM INT,--  게시글 번호 FK
   PRODUCT_ITEM_NUM INT -- 상품 번호 FK
);

-- 사진 저장 (게시판 INSERT)
INSERT INTO IMAGEFILE (FILE_NUM,FILE_ORIGINAL_NAME,FILE_NAME,FILE_EXTENSION,FILE_DIR,BOARD_ITEM_NUM)  
VALUES (COALESCE((SELECT MAX(FILE_NUM) FROM IMAGEFILE),0)+1,?,?,?,?,?);


-- 사진 저장 (상품 INSERT)
INSERT INTO IMAGEFILE (FILE_NUM,FILE_ORIGINAL_NAME,FILE_NAME,FILE_EXTENSION,FILE_DIR,PRODUCT_ITEM_NUM)  
VALUES (COALESCE((SELECT MAX(FILE_NUM) FROM IMAGEFILE),0)+1,?,?,?,?,?);

-- 크롤링 게시판 INSERT
INSERT INTO IMAGEFILE (FILE_NUM,FILE_ORIGINAL_NAME,FILE_NAME,FILE_EXTENSION,FILE_DIR,BOARD_ITEM_NUM)
VALUES (COALESCE((SELECT MAX(FILE_NUM) FROM IMAGEFILE),0)+1,?,'PHOTO','jpg',?,?);

-- 크롤링 상품 INSERT
INSERT INTO IMAGEFILE (FILE_NUM,FILE_ORIGINAL_NAME,FILE_NAME,FILE_EXTENSION,FILE_DIR,PRODUCT_ITEM_NUM)
VALUES (COALESCE((SELECT MAX(FILE_NUM) FROM IMAGEFILE),0)+1,?,'PHOTO','jpg',?,?);



-- 사진 변경 (UPDATE)
UPDATE IMAGEFILE SET FILE_NAME=?,FILE_EXTENSION=?,FILE_DIR=? WHERE FILE_NUM=?;


-- 사진 삭제 (DELETE)
DELETE FROM IMAGEFILE WHERE FILE_NUM=?;


-- 사진 전체 출력(게시글 선택시 전체보기 : SELECTALL)
SELECT FILE_NUM, FILE_ORIGINAL_NAME, FILE_NAME, FILE_EXTENSION, FILE_DIR
FROM IMAGEFILE WHERE BOARD_ITEM_NUM=? ORDER BY FILE_NUM;

-- 사진 전체 출력(상품 선택시 전체보기 : SELECTALL)
SELECT FILE_NUM, FILE_ORIGINAL_NAME, FILE_NAME, FILE_EXTENSION, FILE_DIR
FROM IMAGEFILE WHERE PRODUCT_ITEM_NUM=? ORDER BY FILE_NUM;






-- 사진 하나 출력(게시글에서_SELECTONE)
-- 하나의 글에 반영한 사진 중 제일 처음 입력한 사진 한 장만 메인에 보여지게 하기 위함
-- ITEM_NUM과 FILE_CONTENT_TYPE을 받아와 파일번호 순으로 오름차순
-- ROWNUM으로 가상의 번호를 매겨 첫번째 순서에 해당하는 속성들을 반환해준다.
/*
SELECT FILE_NUM, FILE_NAME, FILE_EXTENSION, FILE_DIR
FROM (SELECT FILE_NUM, FILE_NAME, FILE_EXTENSION, FILE_DIR, ITEM_NUM, FILE_CONDITION FROM IMAGEFILE WHERE ITEM_NUM=? AND FILE_CONDITION=? ORDER BY FILE_NUM)
WHERE ROWNUM=1;
-- 전체 출력에서 하나씩 보여주는 기능은 각 게시판 테이블과 상품 테이블에서 기능 구현할 예정 (join 사용)24.09.05
-- 해당 기능 삭제!



CREATE TABLE IMAGEFILE( -- 파일
	FILE_NUM INT PRIMARY KEY, -- 파일 번호 PK
	FILE_ORIGINAL_NAME VARCHAR(100) NOT NULL,-- 파일 원본 이름
	FILE_NAME VARCHAR(2000) NOT NULL, -- 파일 이름 (저장되는 이름)
	FILE_EXTENSION VARCHAR(2000) NOT NULL, -- 파일 확장자
	FILE_DIR VARCHAR(2000) DEFAULT 'default.jpg', -- 파일 경로
	ITEM_NUM INT NOT NULL, -- 상품번호, 게시글 번호 FK 
	
	FILE_CONTENT_TYPE VARCHAR(10) NOT NULL CHECK (FILE_CONTENT_TYPE IN ('게시판','상품')) -- 글/상품 구분
	-- FILECONDITION은 0과 1로 글/상품 구분하기 때문에 값으로 0과 1만 허용하도록 설정
);



*/




